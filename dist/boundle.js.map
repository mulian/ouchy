{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/fortify-array.coffee","boundle.js","src/touch-check-conditions.coffee","src/touch-conditions.coffee","src/touch-event.coffee","src/touch.coffee"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Array","prototype","inArray","item","aItem","len","this","compare","console","log","pushIfNotExist","push",2,"TouchCheckConditions","setCall","conditions","resetConditions","con","ref","results","checkBit","allConditionsCheck","checkStartConditions","obj","checkElement","pinch","checkPinch","move","checkMove","fingers","checkFingers","from","checkFrom","callback","avg","diff","pitch","out","left","x","direction","right","top","y","bottom","ref1","ref2","ref3","toLeft","toRight","toBottom","toTop","check","elements","elmt","isAbove","isIn","tmpElmt","element","el","eq","isEqualNode","document","body","parentNode","above","fingerCount","touches","betweene","to","equals",3,"TouchConditions","_initConditions","onStart","head","touchstart","touchmove","touchend","_getCondition","timing","_addCondition","attr","value","in","distance",4,"TouchEvent","bind","fn","me","apply","arguments","callBack","touch","init","documentReady","addEventListener","removeEventListener","callee","type","_lastEnd","_touchStartCound","_firstEvent","_addCurrentTarget","_addAverage","_checkHomeStretch","_touchStartTimeout","end","clearTimeout","setTimeout","_this","startFingers","start","elementFromPoint","clientX","clientY","b","pageX","pageY","_calcPitch","_addAverageDiff","_addDirections","getPitchBetween","getPoint","getPoints","j","k","len1","maxPitch","p1","p2","points","pointsWithoutP1","array","Math","sqrt","pow","slice","splice","window","innerWidth","innerHeight",5,"Touch","trigger","touchEvent","preventDefault","newCondition","on","options","name","val","./fortify-array","./touch-check-conditions","./touch-conditions","./touch-event"],"mappings":"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","file":"boundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","# Foritfy Array for touch-event and touch-check-conditions.\n\nArray::inArray = (item) ->\n  if @compare?\n    for aItem in @\n      return true if @compare item,aItem\n  else console.log \"ERROR: There is no Array.compare(a,b) Function.\"\n  return false\n\nArray::pushIfNotExist = (item) ->\n  if not @inArray item\n    return @push item\n  return false\n",null,"# Check the conditions.\n\nmodule.exports =\nclass TouchCheckConditions\n  constructor: (@setCall,@conditions) ->\n\n  #Reset Conditions for next check\n  # TODO: dont use checkBit on con\n  resetConditions: ->\n    for con in @conditions\n      con.checkBit=null\n\n  # get all Conditions and check\n  allConditionsCheck: (e) ->\n    for con in @conditions\n      @checkStartConditions con,e\n\n  # Check all Conditions\n  checkStartConditions: (con,e) ->\n    con.checkBit=true\n    #check element?\n    obj = con.conditions['touchstart']\n\n    if con.checkBit #Every condition got an element\n      con.checkBit=@checkElement con,e\n    if con.checkBit and obj.pinch?\n      con.checkBit=@checkPinch con,e\n    if con.checkBit and obj.move?\n      con.checkBit=@checkMove con,e\n    if con.checkBit and obj.fingers?\n      con.checkBit=@checkFingers(con,e)\n    if con.checkBit and obj.from?\n      con.checkBit=@checkFrom(con,e)\n\n    if con.checkBit\n      @setCall con.callback if con.checkBit\n\n  checkPinch: (con,e) ->\n    pinch = con.conditions['touchstart'].pinch\n    if e.avg.diff.pitch? and\n       ((pinch.in? and e.avg.diff.pitch<0) or\n        (pinch.out? and e.avg.diff.pitch>0))\n      return true\n    return false\n\n\n  # Check side move 'from' left...\n  # TODO: move from element side\n  checkFrom: (con,e) ->\n    from = con.conditions['touchstart'].from\n    if (from.left? and e.avg.diff.x>0 and e.direction.left<from.left) or\n       (from.right? and e.avg.diff.x<0 and e.direction.right<from.right) or\n       (from.top? and e.avg.diff.y>0 and e.direction.top<from.top) or\n       (from.bottom? and e.avg.diff.y<0 and e.direction.bottom<from.bottom)\n      return true\n    return false\n\n  # Check the move direction if enabled\n  checkMove: (con,e) ->\n    move = con.conditions['touchstart'].move\n    if (move.x? and not ((move.x*-1)<e.avg.diff.x<move.x) and ((move.x*-1)<e.avg.diff.y<move.x)) or\n       (move.y? and not ((move.y*-1)<e.avg.diff.y<move.y) and ((move.y*-1)<e.avg.diff.x<move.y)) or\n       (move.toLeft? and (move.toLeft<(e.avg.diff.x*-1))) or\n       (move.toRight? and e.avg.diff.x>move.toRight) or\n       (move.toBottom? and e.avg.diff.y>move.toBottom) or\n       (move.toTop? and (e.avg.diff.y*-1)>move.toTop)\n      return true\n    return false\n\n  # Dom Element=elmt\n  # elmt.eq == more or eq one finger on elmt\n  # if no element is defined, it will use every target\n  # Table:\n  # | elmt.eq | elmt.above | Description                               |\n  # | ------- | ---------- | ----------------------------------------- |\n  # |  true   |   true     | Touch on Element or above (on dom branch) |\n  # |  true   |   false    | Touch only on element                     |\n  # |  false  |   true     | Touch not on Element, but on above        |\n  # |  false  |   false    | Touch anywere not on and above            |\n  checkElement: (con,e) ->\n    return true if not con.element.el?\n    check = false\n    elmt = con.element\n    elements = e.avg.elements\n    #check if elmt is in\n    isIn = elements.inArray elmt.el\n    if elmt.eq==isIn == true\n      return true\n    isAbove = false\n    if not isIn #check all elmts above (>) the con.elmt\n      tmpElmt = elmt.el\n      while (not tmpElmt.isEqualNode(document.body))\n        tmpElmt = tmpElmt.parentNode\n        if elements.inArray tmpElmt\n          isAbove = true\n          break;\n    if elmt.above==isAbove==true\n      return true\n    if elmt.above==isAbove==isIn==elmt.eq==false\n      return true\n    return false\n\n  # Check the fingers count\n  checkFingers: (con,e) ->\n    fingers = con.conditions['touchstart'].fingers\n    fingerCount = e.touches.length\n    # console.log fingerCount\n    if fingers.betweene?\n      if not (fingerCount>=fingers.from and fingerCount<=fingers.to)\n        return false\n    else if fingers.equals?\n      if fingerCount!=fingers.eq\n        return false\n    return true\n","# TouchConditions\n# With this Class you create the Conditions\n\n# TODO: aktivate event foritfy (touch-event) packages on use conditions.\n#       Then there are less calculations for touch-event and better runtime.\n# TODO: remove timing? (touchstart,touchmove,touchend)\n\nmodule.exports =\nclass TouchConditions\n  _initConditions: ->\n    @conditions= {} = #there is no nee for others then touchstart or?\n      touchstart: {}\n      touchmove: {}\n      touchend: {}\n  _getCondition: ->\n    return @conditions[@timing]\n  _addCondition: (attr,value) ->\n    @_getCondition()[attr] = value\n\n  constructor: ->\n    @_initConditions()\n    @onStart() #default\n    @fingers.head = @\n    @move.head = @\n    @from.head = @\n    @pinch.head = @\n\n    return @\n\n  call: (@callback) ->\n    return @\n\n\n  onStart: ->\n    @timing='touchstart'\n    return @\n  # onMove: ->\n  #   @timing='touchmove'\n  #   return @\n  # onEnd: -> #no need?\n  #   @timing='touchend'\n  #   return @\n\n  element: {} =\n    eq: true\n    above: true\n    el: null\n\n  pinch: {} =\n    in: (distance) ->\n      distance ?= 50\n      @head._addCondition 'pinch', {} =\n        in: distance\n      return @head\n    out: (distance) ->\n      distance ?= 50\n      @head._addCondition 'pinch', {} =\n        out: distance\n      return @head\n\n  #move from\n  from: {} =\n    left: (distance) ->\n      distance ?= 50\n      @head._addCondition 'from', {} =\n        left: distance\n      return @head\n    right: (distance) ->\n      distance ?= 50\n      @head._addCondition 'from', {} =\n        right: distance\n      return @head\n    top: (distance) ->\n      distance ?= 50\n      @head._addCondition 'from', {} =\n        top: distance\n      return @head\n    bottom: (distance) ->\n      distance ?= 50\n      @head._addCondition 'from', {} =\n        bottom: distance\n      return @head\n\n  # move with distance to activate\n  move: {} =\n    x: (distance) ->\n      distance ?= 50\n      @head._addCondition 'move', {} =\n        x: distance\n      return @head\n    y: (distance) ->\n      distance ?= 50\n      @head._addCondition 'move', {} =\n        y: distance\n      return @head\n    toRight: (distance) ->\n      distance ?= 50\n      @head._addCondition 'move', {} =\n        toRight: distance\n      return @head\n    toLeft: (distance) ->\n      distance ?= 50\n      @head._addCondition 'move', {} =\n        toLeft: distance\n      return @head\n    toTop: (distance) ->\n      distance ?= 50\n      @head._addCondition 'move', {} =\n        toTop: distance\n      return @head\n    toBottom: (distance) ->\n      distance ?= 50\n      @head._addCondition 'move', {} =\n        toBottom: distance\n      return @head\n\n  fingers: {} =\n    betweene: (from,to) ->\n      @head._addCondition 'fingers', {} =\n        from: from\n        to: to\n        betweene: true\n      return @head\n    eq: (eq) ->\n      @head._addCondition 'fingers', {} =\n        eq: eq\n        equals: true\n      return @head\n","# Fortify Touch event Object.\n# And add Listener to Dom.\n\nmodule.exports =\nclass TouchEvent\n  constructor: (@callBack) ->\n    # $(document).ready @init\n    @documentReady @init\n\n  #for no jquery depencies!\n  documentReady: (callback) ->\n    document.addEventListener \"DOMContentLoaded\", ->\n        document.removeEventListener \"DOMContentLoaded\", arguments.callee, false\n        callback()\n    , false\n\n  #init touch events\n  init: =>\n    document.body.addEventListener 'touchstart',@touch\n    document.body.addEventListener 'touchmove',@touch\n    document.body.addEventListener 'touchend',@touch\n    document.body.addEventListener 'touchcancel',@touch\n\n  #call on every touch event\n  touch: (e) =>\n    if e.type=='touchstart' and @_lastEnd and @_touchStartCound==0\n      @_firstEvent = e\n    @_addCurrentTarget e\n    @_addAverage e\n    @_checkHomeStretch e\n\n  #Zielgerade\n  # It calls the callBack\n  _lastEnd: true\n  _touchStartTimeout: null\n  _touchStartCound: 0\n  _checkHomeStretch: (e) ->\n    if e.type=='touchend' and e.touches.length==0\n      e.end=true\n      @_lastEnd=true\n      @callBack e\n    #call it only, if he really knows how many fingers u use\n    else if e.type=='touchmove' and @_lastEnd and @_touchStartCound<10\n      # console.log @_touchStartCound\n      @_touchStartCound++\n      clearTimeout @_touchStartTimeout if @_touchStartTimeout!=null\n      @_touchStartTimeout = setTimeout =>\n        e.startFingers=e.touches.length\n        e.start=true\n        @_touchStartCound=0\n        @_lastEnd=false\n        @callBack e\n      , 15\n    else\n      @callBack e\n\n  #Add Target to touches\n  _addCurrentTarget: (e) ->\n    if e.touches.length>0\n      for touch in e.touches\n        touch.element = document.elementFromPoint(touch.clientX, touch.clientY)\n\n\n  #calculate the x and y average\n  #and the elements of touches\n  _addAverage: (e) ->\n    if e.touches.length>0\n      elements = []\n      elements.compare = (a,b) ->\n        return true if a? and a.isEqualNode b\n        return false\n      x = 0\n      y = 0\n\n      for touch in e.touches\n        x+=touch.pageX\n        y+=touch.pageY\n        elements.pushIfNotExist touch.element\n      e.avg = {} =\n        x : x/e.touches.length\n        y : y/e.touches.length\n        elements : elements\n        pitch : @_calcPitch(e)\n\n      @_addAverageDiff e\n      #directions depence on .avg\n      @_addDirections e\n\n\n  #are there any Graph optimizations?\n  # TODO: remove getPoints for runtime?\n  # Algorithm:\n  # if there is only one point return 0\n  # for any point\n  #    create sublist without current point\n  #    for sublist\n  #       get pitch between point from first and secound for loop\n  #       if pitch is greater then save\n  # return greatest pitch\n  _calcPitch: (e) ->\n    return 0 if e.touches.length==1\n    getPoint = (touch) ->\n      return {} =\n        x: touch.pageX\n        y: touch.pageY\n    getPoints = (touches) ->\n      array = []\n      for touch in e.touches\n        getPoint touch\n    getPitchBetween = (p1,p2) ->\n      return Math.sqrt(Math.pow(p2.x-p1.x,2)+Math.pow(p2.y-p1.y,2))\n\n    points = getPoints e.touches\n    maxPitch = 0\n    for p1,k in points\n      pointsWithoutP1 = points.slice(0) #clone all points\n      pointsWithoutP1.splice k,1 #remove current element from pointsWithoutP1\n      for p2 in pointsWithoutP1\n        pitch = getPitchBetween p1,p2\n        if pitch>maxPitch\n          maxPitch=pitch\n    return maxPitch\n\n  _addAverageDiff: (e) ->\n    e.avg.diff = {} =\n      x: e.avg.x-@_firstEvent.avg.x\n      y: e.avg.y-@_firstEvent.avg.y\n      pitch: e.avg.pitch-@_firstEvent.avg.pitch if @_firstEvent.avg.pitch>0\n    # console.log @_firstEvent.avg.pitch\n    # console.log e.avg.pitch\n\n  #add directions to\n  _addDirections: (e) ->\n    e.direction = {} =\n      left: e.avg.x\n      top: e.avg.y\n      right: window.innerWidth - e.avg.x\n      bottom: window.innerHeight - e.avg.y\n","# The Main Smart-Touch Class\n\nTouchEvent = require './touch-event'\nTouchConditions = require './touch-conditions'\nTouchCheckConditions = require './touch-check-conditions'\n# TouchTest = require './touch-test'\nrequire './fortify-array'\n\nmodule.exports =\nclass Touch\n  conditions: []\n  constructor: ->\n    @touchEvent = new TouchEvent @trigger\n    @check = new TouchCheckConditions @setCall, @conditions\n\n  setCall: (@call) =>\n  call: null\n  trigger: (e) =>\n    e.preventDefault()\n    if @call==null and e.start\n      @check.allConditionsCheck e\n\n    @call e if @call!=null\n\n    if e.end\n      @call = null\n      @check.resetConditions()\n\n  newCondition: ->\n    con = new TouchConditions()\n    @conditions.push con\n    return con\n  on: (element,options) ->\n    con = @newCondition()\n    if options?\n      for name, val of options\n        con.element[name] = val\n    con.element.el = element\n    return con\n\nwindow.touch = new Touch()\n"],"sourceRoot":"/source/"}