{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/fortify-array.coffee","src/touch-check-conditions.coffee","src/touch-conditions.coffee","src/touch-event.coffee","src/touch.coffee"],"names":[],"mappings":"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","file":"boundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","Array::inArray = (item) ->\n  if @compare?\n    for aItem in @\n      return true if @compare item,aItem\n  else console.log \"ERROR: There is no Array.compare(a,b) Function.\"\n  return false\n\nArray::pushIfNotExist = (item) ->\n  if not @inArray item\n    return @push item\n  return false\n","# Touch\n\nmodule.exports =\nclass TouchCheckConditions\n  constructor: (@setCall,@conditions) ->\n\n  #Reset Conditions for next check\n  # TODO: dont use checkBit on con\n  resetConditions: ->\n    for con in @conditions\n      con.checkBit=null\n\n  # get all Conditions and check\n  allConditionsCheck: (e) ->\n    for con in @conditions\n      @checkStartConditions con,e\n\n  # Check all Conditions\n  checkStartConditions: (con,e) ->\n    con.checkBit=true\n    #check element?\n    obj = con.conditions['touchstart']\n\n    if con.checkBit #Every condition got an element\n      con.checkBit=@checkElement con,e\n    if con.checkBit and obj.move?\n      con.checkBit=@checkMove con,e\n    if con.checkBit and obj.fingers?\n      con.checkBit=@checkFingers(con,e)\n    if con.checkBit and obj.from?\n      con.checkBit=@checkFrom(con,e)\n\n    if con.checkBit\n      @setCall con.callback if con.checkBit\n\n  # Check side move 'from' left...\n  # TODO: move from element side\n  checkFrom: (con,e) ->\n    from = con.conditions['touchstart'].from\n    if (from.left? and e.avg.diff.x>0 and e.direction.left<from.left) or\n       (from.right? and e.avg.diff.x<0 and e.direction.right<from.right) or\n       (from.top? and e.avg.diff.y>0 and e.direction.top<from.top) or\n       (from.bottom? and e.avg.diff.y<0 and e.direction.bottom<from.bottom)\n      return true\n    return false\n\n  # Check the move direction if enabled\n  checkMove: (con,e) ->\n    move = con.conditions['touchstart'].move\n    if (move.x? and not ((move.x*-1)<e.avg.diff.x<move.x) and ((move.x*-1)<e.avg.diff.y<move.x)) or\n       (move.y? and not ((move.y*-1)<e.avg.diff.y<move.y) and ((move.y*-1)<e.avg.diff.x<move.y)) or\n       (move.toLeft? and (move.toLeft<(e.avg.diff.x*-1))) or\n       (move.toRight? and e.avg.diff.x>move.toRight) or\n       (move.toBottom? and e.avg.diff.y>move.toBottom) or\n       (move.toTop? and (e.avg.diff.y*-1)>move.toTop)\n      return true\n    return false\n\n  # Dom Element=elmt\n  # elmt.eq == more or eq one finger on elmt\n  #\n  # Table:\n  # | elmt.eq | elmt.above | Description                               |\n  # | ------- | ---------- | ----------------------------------------- |\n  # |  true   |   true     | Touch on Element or above (on dom branch) |\n  # |  true   |   false    | Touch only on element                     |\n  # |  false  |   true     | Touch not on Element, but on above        |\n  # |  false  |   false    | Touch anywere not on and above            |\n  checkElement: (con,e) ->\n    check = false\n    elmt = con.element\n    elements = e.avg.elements\n    #check if elmt is in\n    isIn = elements.inArray elmt.el\n    if elmt.eq==isIn == true\n      return true\n    isAbove = false\n    if not isIn #check all elmts above (>) the con.elmt\n      tmpElmt = elmt.el\n      while (not tmpElmt.isEqualNode(document.body))\n        tmpElmt = tmpElmt.parentNode\n        if elements.inArray tmpElmt\n          isAbove = true\n          break;\n    if elmt.above==isAbove==true\n      return true\n    if elmt.above==isAbove==isIn==elmt.eq==false\n      return true\n    return false\n\n  # Check the fingers count\n  checkFingers: (con,e) ->\n    fingers = con.conditions['touchstart'].fingers\n    fingerCount = e.touches.length\n    # console.log fingerCount\n    if fingers.betweene?\n      if not (fingerCount>=fingers.from and fingerCount<=fingers.to)\n        return false\n    else if fingers.equals?\n      if fingerCount!=fingers.eq\n        return false\n    return true\n","# TouchConditions\n\n\nmodule.exports =\nclass TouchConditions\n  _initConditions: ->\n    @conditions= {} = #there is no nee for others then touchstart or?\n      touchstart: {}\n      touchmove: {}\n      touchend: {}\n  _getCondition: ->\n    return @conditions[@timing]\n  _addCondition: (attr,value) ->\n    @_getCondition()[attr] = value\n\n  constructor: ->\n    @_initConditions()\n    @onStart() #default\n    @fingers.head = @\n    @move.head = @\n    @from.head = @\n\n    return @\n\n  call: (@callback) ->\n    return @\n\n\n  onStart: ->\n    @timing='touchstart'\n    return @\n  # onMove: ->\n  #   @timing='touchmove'\n  #   return @\n  # onEnd: -> #no need?\n  #   @timing='touchend'\n  #   return @\n\n  element: {} =\n    eq: true\n    above: true\n    el: null\n\n  #move from\n  from: {} =\n    left: (distance) ->\n      distance ?= 50\n      @head._addCondition 'from', {} =\n        left: distance\n      return @head\n    right: (distance) ->\n      distance ?= 50\n      @head._addCondition 'from', {} =\n        right: distance\n      return @head\n    top: (distance) ->\n      distance ?= 50\n      @head._addCondition 'from', {} =\n        top: distance\n      return @head\n    bottom: (distance) ->\n      distance ?= 50\n      @head._addCondition 'from', {} =\n        bottom: distance\n      return @head\n\n  # move with distance to activate\n  move: {} =\n    x: (distance) ->\n      distance ?= 50\n      @head._addCondition 'move', {} =\n        x: distance\n      return @head\n    y: (distance) ->\n      distance ?= 50\n      @head._addCondition 'move', {} =\n        y: distance\n      return @head\n    toRight: (distance) ->\n      distance ?= 50 \n      @head._addCondition 'move', {} =\n        toRight: distance\n      return @head\n    toLeft: (distance) ->\n      distance ?= 50\n      @head._addCondition 'move', {} =\n        toLeft: distance\n      return @head\n    toTop: (distance) ->\n      distance ?= 50\n      @head._addCondition 'move', {} =\n        toTop: distance\n      return @head\n    toBottom: (distance) ->\n      distance ?= 50\n      @head._addCondition 'move', {} =\n        toBottom: distance\n      return @head\n\n  fingers: {} =\n    betweene: (from,to) ->\n      @head._addCondition 'fingers', {} =\n        from: from\n        to: to\n        betweene: true\n      return @head\n    eq: (eq) ->\n      @head._addCondition 'fingers', {} =\n        eq: eq\n        equals: true\n      return @head\n","# Touch\nmodule.exports =\nclass TouchEvent\n  constructor: (@callBack) ->\n    # $(document).ready @init\n    @documentReady @init\n\n  #for no jquery depencies!\n  documentReady: (callback) ->\n    document.addEventListener \"DOMContentLoaded\", ->\n        document.removeEventListener \"DOMContentLoaded\", arguments.callee, false\n        callback()\n    , false\n\n  #init touch events\n  init: =>\n    document.body.addEventListener 'touchstart',@touch\n    document.body.addEventListener 'touchmove',@touch\n    document.body.addEventListener 'touchend',@touch\n    document.body.addEventListener 'touchcancel',@touch\n\n  #call on every touch event\n  touch: (e) =>\n    if e.type=='touchstart' and @_lastEnd and @_touchStartCound==0\n      @_firstEvent = e\n    @_addCurrentTarget e\n    @_addAverage e\n    @_checkHomeStretch e\n\n  #Zielgerade\n  # It calls the callBack\n  _lastEnd: true\n  _touchStartTimeout: null\n  _touchStartCound: 0\n  _checkHomeStretch: (e) ->\n    if e.type=='touchend' and e.touches.length==0\n      e.end=true\n      @_lastEnd=true\n      @callBack e\n    #call it only, if he really knows how many fingers u use\n    else if e.type=='touchmove' and @_lastEnd and @_touchStartCound<10\n      # console.log @_touchStartCound\n      @_touchStartCound++\n      clearTimeout @_touchStartTimeout if @_touchStartTimeout!=null\n      @_touchStartTimeout = setTimeout =>\n        e.startFingers=e.touches.length\n        e.start=true\n        @_touchStartCound=0\n        @_lastEnd=false\n        @callBack e\n      , 15\n    else\n      @callBack e\n\n  #Add Target to touches\n  _addCurrentTarget: (e) ->\n    if e.touches.length>0\n      for touch in e.touches\n        touch.element = document.elementFromPoint(touch.clientX, touch.clientY)\n\n\n  #calculate the x and y average\n  #and the elements of touches\n  _addAverage: (e) ->\n    if e.touches.length>0\n      elements = []\n      elements.compare = (a,b) ->\n        return true if a.isEqualNode b\n        return false\n      x = 0\n      y = 0\n      for touch in e.touches\n        x+=touch.pageX\n        y+=touch.pageY\n        elements.pushIfNotExist touch.element\n      e.avg = {} =\n        x : x/e.touches.length\n        y : y/e.touches.length\n        elements : elements\n\n      @_addAverageDiff e\n      #directions depence on .avg\n      @_addDirections e\n\n\n  _addAverageDiff: (e) ->\n    e.avg.diff = {} =\n      x: e.avg.x-@_firstEvent.avg.x\n      y: e.avg.y-@_firstEvent.avg.y\n\n  #add directions to\n  _addDirections: (e) ->\n    e.direction = {} =\n      left: e.avg.x\n      top: e.avg.y\n      right: window.innerWidth - e.avg.x\n      bottom: window.innerHeight - e.avg.y\n","# Touch\nTouchEvent = require './touch-event'\nTouchConditions = require './touch-conditions'\nTouchCheckConditions = require './touch-check-conditions'\n# TouchTest = require './touch-test'\nrequire './fortify-array'\n\nmodule.exports =\nclass Touch\n  conditions: []\n  constructor: ->\n    @touchEvent = new TouchEvent @trigger\n    @check = new TouchCheckConditions @setCall, @conditions\n\n  setCall: (@call) =>\n  call: null\n  trigger: (e) =>\n    e.preventDefault()\n    if @call==null and e.start\n      @check.allConditionsCheck e\n\n    @call e if @call!=null\n\n    if e.end\n      @call = null\n      @check.resetConditions()\n\n  newCondition: ->\n    con = new TouchConditions()\n    @conditions.push con\n    return con\n  on: (element,options) ->\n    con = @newCondition()\n    if options?\n      for name, val of options\n        con.element[name] = val\n    con.element.el = element\n    return con\n\nwindow.touch = new Touch()\n"]}